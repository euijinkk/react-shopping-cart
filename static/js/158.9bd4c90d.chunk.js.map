{"version":3,"file":"static/js/158.9bd4c90d.chunk.js","mappings":"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","sources":["components/common/Portal.tsx","components/common/Snackbar.tsx","hooks/useFetch.ts","hooks/useSnackBar.ts","hooks/usePagination.tsx","components/common/Pagination.tsx","components/ItemList/ItemContainer.tsx","pages/ItemList.tsx","constants/index.ts","redux/itemList/thunk.ts"],"sourcesContent":["import reactDom from 'react-dom';\n\ninterface PortalProps {\n  children: React.ReactNode;\n  id: string;\n}\n\nconst Portal = ({ children, id }: PortalProps) => {\n  return reactDom.createPortal(children, document.getElementById(id));\n};\n\nexport default Portal;\n","import styled, { keyframes } from 'styled-components';\nimport { flexCenter } from 'styles/mixin';\n\nimport Portal from './Portal';\n\nexport const MESSAGE = {\n  cart: '장바구니에 담았습니다.',\n} as const;\n\ntype Message = typeof MESSAGE[keyof typeof MESSAGE];\n\nconst Snackbar = ({ message }: { message: Message }) => {\n  return (\n    <Portal id='snackbar'>\n      <StyledSnackbarContents>{message}</StyledSnackbarContents>\n    </Portal>\n  );\n};\n\nexport default Snackbar;\n\nconst snackbarShow = keyframes`\n  0% { bottom:-7rem; opacity:0 }\n  40%{ bottom:3rem; opacity:0 }\n  65% { bottom:5rem; }\n  80% { bottom:3rem; opacity:1 }\n  100% { bottom:5rem; }\n`;\n\nconst StyledSnackbarContents = styled.div`\n  ${flexCenter};\n  position: fixed;\n  width: 50rem;\n  height: 7rem;\n  color: white;\n  background-color: ${({ theme }) => theme.colors.primary};\n  left: 50%;\n  bottom: -7rem;\n  transform: translateX(-50%);\n  font-size: 2.5rem;\n\n  animation-name: ${snackbarShow};\n  animation-duration: 0.5s;\n  animation-direction: forwards;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n`;\n","import { client } from 'apis';\nimport { useEffect, useState } from 'react';\n\nexport const useFetch = <T>(url: string) => {\n  const [data, setData] = useState<T>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string>(null);\n\n  useEffect(() => {\n    const requestData = async () => {\n      setLoading(true);\n      try {\n        const { data, statusText } = await client.get<T>(url);\n\n        if (statusText !== 'OK') throw new Error();\n        if (!loading) return;\n\n        setData(data);\n      } catch {\n        setError('something is wrong!');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    requestData();\n\n    return () => {\n      setLoading(false);\n    };\n  }, [url]);\n\n  return { data, loading, error };\n};\n","import { useCallback, useRef, useState } from 'react';\n\nconst useSnackBar = () => {\n  const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n  const timerRef = useRef(null);\n  const openSnackbar = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = null;\n    }\n    setIsOpenSnackbar(true);\n    timerRef.current = setTimeout(() => {\n      setIsOpenSnackbar(false);\n    }, 3000);\n  }, []);\n\n  return { isOpenSnackbar, openSnackbar };\n};\n\nexport default useSnackBar;\n","import { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { PATH } from 'Routers';\n\ninterface PaginationProps {\n  count: number;\n  lastIndex: number;\n}\n\nconst usePagination = ({ count, lastIndex }: PaginationProps) => {\n  const { id } = useParams();\n  const [currentPage, setCurrentPage] = useState(Number(id));\n  const navigate = useNavigate();\n\n  const pageStartNumber = Math.floor((currentPage - 1) / count) * count;\n\n  const handleClickNumber = (page: number) => {\n    setCurrentPage(page);\n    navigate(PATH.getMain(page));\n  };\n\n  const handleClickPrev = () => {\n    if (currentPage <= 1) return;\n    const page = currentPage - 1;\n\n    setCurrentPage(page);\n    navigate(PATH.getMain(page));\n  };\n\n  const handleClickNext = () => {\n    if (currentPage >= lastIndex) return;\n    const page = currentPage + 1;\n\n    setCurrentPage(page);\n    navigate(PATH.getMain(page));\n  };\n\n  return {\n    currentPage,\n    pageStartNumber,\n    handleClickNumber,\n    handleClickPrev,\n    handleClickNext,\n  };\n};\n\nexport default usePagination;\n","import usePagination from 'hooks/usePagination';\nimport styled, { css } from 'styled-components';\n\ninterface PaginationProps {\n  lastIndex: number;\n  count: number;\n}\n\nconst Pagination = ({ count, lastIndex }: PaginationProps) => {\n  const { currentPage, pageStartNumber, handleClickNumber, handleClickPrev, handleClickNext } =\n    usePagination({ count, lastIndex });\n\n  return (\n    <StyledRoot>\n      <StyledPageIndicator onClick={handleClickPrev}>이전</StyledPageIndicator>\n      {Array.from({ length: count }, (_, index: number) => {\n        const page = pageStartNumber + index + 1;\n        const shouldShowPage = page <= lastIndex;\n\n        if (!shouldShowPage) return null;\n\n        return (\n          <StyledPageIndicator\n            key={index}\n            selected={currentPage === page}\n            onClick={() => handleClickNumber(page)}\n          >\n            {page}\n          </StyledPageIndicator>\n        );\n      })}\n      <StyledPageIndicator onClick={handleClickNext}>다음</StyledPageIndicator>\n    </StyledRoot>\n  );\n};\n\nexport default Pagination;\n\nconst StyledRoot = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 2rem;\n  margin-top: 5rem;\n  width: 100%;\n  margin: auto;\n`;\n\nconst StyledPageIndicator = styled.button<{ selected?: boolean }>`\n  ${({ selected, theme }) =>\n    selected &&\n    css`\n      color: ${theme.colors.primary};\n      font-weight: 700;\n    `}\n\n  font-size: 3rem\n`;\n","import { ReactComponent as CartIcon } from 'assets/cartIcon.svg';\nimport CroppedImage from 'components/common/CroppedImage';\nimport { memo, MouseEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PATH } from 'Routers';\nimport styled from 'styled-components';\nimport { flexCenter } from 'styles/mixin';\nimport theme from 'styles/theme';\nimport { Item } from 'types/domain';\n\ninterface ItemContainerProps {\n  item: Item;\n  onCartClick: (diff?: number) => void;\n  openSnackbar: () => void;\n}\n\nconst ItemContainer = ({ item, onCartClick, openSnackbar }: ItemContainerProps) => {\n  const { id, thumbnailUrl, price, title } = item;\n  const handleClickItemContainer = (e: MouseEvent<HTMLAnchorElement, globalThis.MouseEvent>) => {\n    if (e.target instanceof SVGElement) {\n      e.preventDefault();\n    }\n  };\n\n  const handleClickCartIcon = () => {\n    onCartClick();\n    openSnackbar();\n  };\n\n  return (\n    <Link to={PATH.getItemDetail(id)} onClick={handleClickItemContainer} replace>\n      <StyledRoot>\n        <CroppedImage src={thumbnailUrl} width='270px' height='270px' alt={title} />\n        <StyledBottom>\n          <StyledDescription>\n            <StyledTitle>{title}</StyledTitle>\n            <StyledPrice>{price.toLocaleString()}</StyledPrice>\n          </StyledDescription>\n          <StyledCartIcon width='31px' fill={theme.colors.GRAY_500} onClick={handleClickCartIcon} />\n        </StyledBottom>\n      </StyledRoot>\n    </Link>\n  );\n};\n\nexport default memo(ItemContainer);\n\nconst StyledRoot = styled.div`\n  ${flexCenter}\n  flex-direction: column;\n  width: 28.2rem;\n  height: 35.8rem;\n  gap: 1.8rem;\n  cursor: pointer;\n  transition: box-shadow 0.1s ease;\n  &:hover {\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    img {\n      transform: scale(1.2);\n    }\n  }\n  img {\n    transition: transform 0.5s ease;\n  }\n`;\n\nconst StyledBottom = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  padding: 0 2rem;\n  align-items: center;\n`;\n\nconst StyledDescription = styled.div``;\n\nconst StyledTitle = styled.p`\n  font-size: 1.6rem;\n`;\n\nconst StyledPrice = styled.p`\n  font-size: 2rem;\n`;\n\nconst StyledCartIcon = styled(CartIcon)`\n  cursor: pointer;\n`;\n","import Loading from 'components/common/Loading';\nimport Pagination from 'components/common/Pagination';\nimport RequestFail from 'components/common/RequestFail';\nimport Snackbar, { MESSAGE } from 'components/common/Snackbar';\nimport ItemContainer from 'components/ItemList/ItemContainer';\nimport { MAX_RESULT_ITEM_LIST } from 'constants/index';\nimport useCartRequest from 'hooks/useCartRequest';\nimport { useFetch } from 'hooks/useFetch';\nimport useSnackBar from 'hooks/useSnackBar';\nimport useThunkFetch from 'hooks/useThunkFetch';\nimport { useParams } from 'react-router-dom';\nimport { getCartListRequest } from 'redux/cartList/thunk';\nimport { getItemList } from 'redux/itemList/thunk';\nimport styled from 'styled-components';\nimport { Item } from 'types/domain';\n\nconst ItemList = () => {\n  const { id } = useParams();\n  const {\n    data: itemList,\n    error: error_getItemList,\n    loading,\n  } = useFetch<Item[]>(`/itemList?_page=${id}&_limit=${MAX_RESULT_ITEM_LIST}`);\n  const { data: allItemList, error: error_getAllItemList } = useThunkFetch(\n    state => state.itemListReducer,\n    getItemList\n  );\n  const { data: cartList, error: error_getCartList } = useThunkFetch(\n    state => state.cartListReducer,\n    getCartListRequest\n  );\n  const { postCartItemQuantity, updateCartItemQuantity } = useCartRequest(cartList);\n  const { isOpenSnackbar, openSnackbar } = useSnackBar();\n\n  if (loading) return <Loading />;\n  if (error_getItemList || error_getAllItemList || error_getCartList) return <RequestFail />;\n\n  return (\n    <StyledRoot>\n      {itemList?.map(item => {\n        const id = item.id;\n        const isInCart = cartList.some(cartItem => cartItem.id === id);\n\n        return (\n          <ItemContainer\n            key={id}\n            item={item}\n            onCartClick={isInCart ? updateCartItemQuantity?.(id) : postCartItemQuantity?.(id)}\n            openSnackbar={openSnackbar}\n          />\n        );\n      })}\n      <Pagination\n        count={10}\n        lastIndex={Math.floor(allItemList.length / MAX_RESULT_ITEM_LIST) + 1}\n      />\n      {isOpenSnackbar && <Snackbar message={MESSAGE.cart} />}\n    </StyledRoot>\n  );\n};\n\nexport default ItemList;\n\nconst StyledRoot = styled.div`\n  width: 1300px;\n  display: flex;\n  flex-wrap: wrap;\n  margin: auto;\n  gap: 2.7rem 5.73rem;\n`;\n","const MAX_RESULT_ITEM_LIST = 12;\n\nexport { MAX_RESULT_ITEM_LIST };\n","import { BASE_URL } from 'apis';\nimport axios from 'axios';\nimport type { Dispatch } from 'redux';\n\nimport { ItemListAction, itemListAction } from './action';\n\nexport const getItemList = () => async (dispatch: Dispatch<ItemListAction>) => {\n  dispatch(itemListAction.getItemListStart());\n  try {\n    const response = await axios.get(`${BASE_URL}/itemList`);\n\n    dispatch(itemListAction.getItemListSuccess(response.data));\n  } catch (e) {\n    dispatch(itemListAction.getItemListFailure(e.message));\n  }\n};\n"],"names":["children","id","reactDom","document","getElementById","MESSAGE","cart","message","StyledSnackbarContents","snackbarShow","keyframes","styled","flexCenter","theme","colors","primary","useFetch","url","useState","data","setData","loading","setLoading","error","setError","useEffect","requestData","client","statusText","Error","isOpenSnackbar","setIsOpenSnackbar","timerRef","useRef","openSnackbar","useCallback","current","clearTimeout","setTimeout","count","lastIndex","useParams","Number","currentPage","setCurrentPage","navigate","useNavigate","pageStartNumber","Math","floor","handleClickNumber","page","PATH","handleClickPrev","handleClickNext","usePagination","StyledRoot","StyledPageIndicator","onClick","Array","from","length","_","index","selected","css","ItemContainer","item","onCartClick","thumbnailUrl","price","title","to","e","target","SVGElement","preventDefault","replace","CroppedImage","src","width","height","alt","StyledBottom","StyledDescription","StyledTitle","StyledPrice","toLocaleString","StyledCartIcon","fill","memo","CartIcon","itemList","error_getItemList","useThunkFetch","state","itemListReducer","getItemList","allItemList","error_getAllItemList","cartListReducer","getCartListRequest","cartList","error_getCartList","useCartRequest","postCartItemQuantity","updateCartItemQuantity","useSnackBar","Loading","RequestFail","map","isInCart","some","cartItem","Snackbar","dispatch","itemListAction","axios","BASE_URL","response"],"sourceRoot":""}