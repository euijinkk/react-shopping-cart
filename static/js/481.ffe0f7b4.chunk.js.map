{"version":3,"file":"static/js/481.ffe0f7b4.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/common/Button.tsx","components/common/Portal.tsx","components/common/Snackbar.tsx","hooks/useFetch.ts","hooks/useSnackBar.ts","pages/ItemDetail.tsx"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { ButtonHTMLAttributes } from 'react';\nimport styled, { css } from 'styled-components';\nimport theme from 'styles/theme';\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  width: string;\n  height: string;\n  backgroundColor?: string;\n  borderColor?: string;\n  fontSize?: string;\n  color?: string;\n}\n\nconst Button = ({ children, ...props }: React.PropsWithChildren<ButtonProps>) => {\n  return <StyledButton {...props}>{children}</StyledButton>;\n};\n\nexport default Button;\n\nconst StyledButton = styled.button<ButtonProps>`\n  background-color: ${({ theme, backgroundColor }) => theme.colors[backgroundColor]};\n  color: white;\n  width: ${({ width }) => width};\n  height: ${({ height }) => height};\n  ${({ width, height, fontSize, color, backgroundColor, borderColor }) => css`\n    width: ${width};\n    height: ${height};\n    font-size: ${fontSize || 'inherit'};\n    color: ${color || 'inherit'};\n    border: ${borderColor && `1px solid ${borderColor}`};\n    background-color: ${backgroundColor || 'transparent'};\n  `}\n`;\n","import reactDom from 'react-dom';\n\ninterface PortalProps {\n  children: React.ReactNode;\n  id: string;\n}\n\nconst Portal = ({ children, id }: PortalProps) => {\n  return reactDom.createPortal(children, document.getElementById(id));\n};\n\nexport default Portal;\n","import styled, { keyframes } from 'styled-components';\nimport { flexCenter } from 'styles/mixin';\n\nimport Portal from './Portal';\n\nexport const MESSAGE = {\n  cart: '장바구니에 담았습니다.',\n} as const;\n\ntype Message = typeof MESSAGE[keyof typeof MESSAGE];\n\nconst Snackbar = ({ message }: { message: Message }) => {\n  return (\n    <Portal id='snackbar'>\n      <StyledSnackbarContents>{message}</StyledSnackbarContents>\n    </Portal>\n  );\n};\n\nexport default Snackbar;\n\nconst snackbarShow = keyframes`\n  0% { bottom:-7rem; opacity:0 }\n  40%{ bottom:3rem; opacity:0 }\n  65% { bottom:5rem; }\n  80% { bottom:3rem; opacity:1 }\n  100% { bottom:5rem; }\n`;\n\nconst StyledSnackbarContents = styled.div`\n  ${flexCenter};\n  position: fixed;\n  width: 50rem;\n  height: 7rem;\n  color: white;\n  background-color: ${({ theme }) => theme.colors.primary};\n  left: 50%;\n  bottom: -7rem;\n  transform: translateX(-50%);\n  font-size: 2.5rem;\n\n  animation-name: ${snackbarShow};\n  animation-duration: 0.5s;\n  animation-direction: forwards;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: forwards;\n`;\n","import { client } from 'apis';\nimport { useEffect, useState } from 'react';\n\nexport const useFetch = <T>(url: string) => {\n  const [data, setData] = useState<T>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string>(null);\n\n  useEffect(() => {\n    const requestData = async () => {\n      setLoading(true);\n      try {\n        const { data, statusText } = await client.get<T>(url);\n\n        if (statusText !== 'OK') throw new Error();\n        if (!loading) return;\n\n        setData(data);\n      } catch {\n        setError('something is wrong!');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    requestData();\n\n    return () => {\n      setLoading(false);\n    };\n  }, [url]);\n\n  return { data, loading, error };\n};\n","import { useCallback, useRef, useState } from 'react';\n\nconst useSnackBar = () => {\n  const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n  const timerRef = useRef(null);\n  const openSnackbar = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = null;\n    }\n    setIsOpenSnackbar(true);\n    timerRef.current = setTimeout(() => {\n      setIsOpenSnackbar(false);\n    }, 3000);\n  }, []);\n\n  return { isOpenSnackbar, openSnackbar };\n};\n\nexport default useSnackBar;\n","import Button from 'components/common/Button';\nimport CroppedImage from 'components/common/CroppedImage';\nimport Loading from 'components/common/Loading';\nimport RequestFail from 'components/common/RequestFail';\nimport Snackbar, { MESSAGE } from 'components/common/Snackbar';\nimport useCartRequest from 'hooks/useCartRequest';\nimport { useFetch } from 'hooks/useFetch';\nimport useSnackBar from 'hooks/useSnackBar';\nimport useThunkFetch from 'hooks/useThunkFetch';\nimport { useParams } from 'react-router-dom';\nimport { getCartListRequest } from 'redux/cartList/thunk';\nimport styled from 'styled-components';\nimport theme from 'styles/theme';\nimport type { Item } from 'types/domain';\n\nconst ItemDetail = () => {\n  const { id } = useParams();\n  const { data: item, loading, error: error_itemList } = useFetch<Item>(`/itemList/${id}`);\n  const { data: cartList, error: error_cartList } = useThunkFetch(\n    state => state.cartListReducer,\n    getCartListRequest\n  );\n  const { postCartItemQuantity, updateCartItemQuantity } = useCartRequest(cartList);\n  const { isOpenSnackbar, openSnackbar } = useSnackBar();\n\n  const isInCart = cartList?.some(cartItem => cartItem.id === item?.id);\n\n  const postCart = () => {\n    postCartItemQuantity(id)(1);\n    openSnackbar();\n  };\n\n  const updateCart = () => {\n    updateCartItemQuantity(id)(1);\n    openSnackbar();\n  };\n\n  if (loading) return <Loading />;\n  if (error_itemList || error_cartList) return <RequestFail />;\n\n  const { thumbnailUrl, title, price } = item;\n\n  return (\n    <StyledRoot>\n      <CroppedImage src={thumbnailUrl} width='570px' height='570px' alt='상품' />\n      <StyledTitle>{title}</StyledTitle>\n      <StyledPrice>\n        <StyledPriceDescription>금액</StyledPriceDescription>\n        <StyledPriceValue>{price.toLocaleString()}</StyledPriceValue>\n      </StyledPrice>\n      <Button\n        width='63.8rem'\n        height='9.8rem'\n        fontSize='3.2rem'\n        backgroundColor={theme.colors.brown}\n        color='white'\n        onClick={isInCart ? updateCart : postCart}\n      >\n        장바구니\n      </Button>\n      {isOpenSnackbar && <Snackbar message={MESSAGE.cart} />}\n    </StyledRoot>\n  );\n};\n\nexport default ItemDetail;\n\nconst StyledRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  align-items: center;\n  width: 64rem;\n`;\n\nconst StyledTitle = styled.div`\n  font-weight: 700;\n  font-size: 3.2rem;\n  width: 100%;\n  padding: 0 3.5rem;\n  margin-top: 2.1rem;\n  margin-bottom: 3.3rem;\n`;\n\nconst StyledPrice = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: solid 0.4rem ${({ theme }) => theme.colors.GRAY_400};\n  width: 100%;\n  padding: 0 3.5rem;\n  padding-top: 3.3rem;\n  margin-bottom: 5.7rem;\n`;\n\nconst StyledPriceDescription = styled.span`\n  font-weight: 400;\n  font-size: 2.4rem;\n`;\n\nconst StyledPriceValue = styled.span`\n  font-weight: 400;\n  font-size: 3.2rem;\n`;\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","children","props","StyledButton","styled","theme","backgroundColor","colors","width","height","fontSize","color","borderColor","css","id","reactDom","document","getElementById","MESSAGE","cart","message","StyledSnackbarContents","snackbarShow","keyframes","flexCenter","primary","useFetch","url","useState","data","setData","loading","setLoading","error","setError","useEffect","requestData","client","statusText","Error","isOpenSnackbar","setIsOpenSnackbar","timerRef","useRef","openSnackbar","useCallback","current","clearTimeout","setTimeout","useParams","item","error_itemList","useThunkFetch","state","cartListReducer","getCartListRequest","cartList","error_cartList","useCartRequest","postCartItemQuantity","updateCartItemQuantity","useSnackBar","isInCart","some","cartItem","thumbnailUrl","title","price","StyledRoot","src","alt","StyledTitle","StyledPrice","StyledPriceDescription","StyledPriceValue","toLocaleString","onClick","GRAY_400"],"sourceRoot":""}